import{desktopConfig as Ut}from"lighthouse";import{Gatherer as Qe}from"lighthouse";var d=class extends Qe{static get id(){throw Error("Gatherer must define id")}context;meta={supportedModes:["navigation","snapshot"]};async evaluate(t,a=[],i=[],r=!1){return this.context.driver.executionContext.evaluate(t,{args:a,deps:i,useIsolation:r})}async getArtifact(t){return this.context=t,await this.gather()}};function M(e,t){let a={};for(let i of document.querySelectorAll(e))for(let r of i.attributes){let{name:s,value:n}=r;(t===void 0||s.toLocaleLowerCase().startsWith(t.toLowerCase()))&&(a[s]||(a[s]={name:s,count:0,values:[]}),a[s].count=a[s].count+1,a[s].values.indexOf(n)===-1&&a[s].values.push(n))}return Object.values(a)}var C=class extends d{static id="ElementAttributes";async gather(){return this.evaluate(M,["body *"])}},D=class extends d{static id="AriaAttributes";async gather(){return this.evaluate(M,["body *","aria-"])}},T=class extends d{static id="AriaRoleAttributes";async gather(){return this.evaluate(M,["body *","role"])}},R=class extends d{static id="DataAttributes";async gather(){return this.evaluate(M,["body *","data-"])}};import{pageFunctions as Ae}from"lighthouse/core/lib/page-functions.js";function Ze(e){let t=[];for(let a of e){let i=getElementsInDocument(a);for(let r of i)t.find(s=>s==r)||t.push(r)}return t.map(a=>{let{id:i,className:r,tagName:s,textContent:n}=a,l=getNodeDetails(a);return{id:i,className:typeof r=="string"?r.split(" ").sort().join(" "):"",hidden:a.getAttribute("type")==="hidden",role:a.getAttribute("role")||"",tagName:s.toLowerCase(),textContent:n||"",node:l}}).sort((a,i)=>{let r=a.node.devtoolsNodePath,s=i.node.devtoolsNodePath;return r.localeCompare(s)})}function et(e,t){return`${e.tagName} ${e.className}`.localeCompare(`${t.tagName} ${t.className}`)}var b=class extends d{selectors=["*"];async gather(){return(await this.evaluate(Ze,[this.selectors],[Ae.getElementsInDocument,Ae.getNodeDetails])).sort(et)}},L=class extends b{selectors=['[type="application/ld+json"]']},P=class extends b{selectors=["[alt]","[aria-description]","[aria-label]","[aria-labelledby]"]},G=class extends b{selectors=["progress","[aria-errormessage]","[aria-invalid]","[aria-modal]",'[role="alert"]','[role="alertdialog"]','[role="dialog"]','[role="progressbar"]','[role="status"]',".err",".error",".fail",".warn",".warning",".alert",".feedback",".toast",".dialog",".modal",".popup",".loading",".progress",".spinner"]},O=class extends b{selectors=["[data-auid]","[data-automation]","[data-e2e]","[data-test]","[data-test-id]","[data-testid]","[data-tid]","[id]"]};import tt from"lighthouse-logger";var k=class extends d{integrations={bugsnag:{name:"Bugsnag",enabled:!1,expression:/.*provider_id: 'bugsnag'.*/},dlo:{name:"Data Layer Capture",enabled:!1,expression:/.*provider_id: 'dlo'.*/},intercom:{name:"Intercom",enabled:!1,expression:/.*provider_id: 'intercom'.*/},mixpanel:{name:"Mixpanel",enabled:!1,expression:/.*provider_id: 'mixpanel'.*/},olark:{name:"Olark",enabled:!1,expression:/.*provider_id: 'olark'.*/},qualtrics:{name:"Qualtrics",enabled:!1,expression:/.*provider_id: 'qualtrics'.*/}};async gather(){let{driver:{defaultSession:t,networkMonitor:a}}=this.context,i=a._networkRecorder._records.find(r=>r.url.includes("fullstory.com/rec/integrations"));if(i){let{requestId:r}=i;try{let{body:s}=await t.sendCommand("Network.getResponseBody",{requestId:r});for(let n of Object.keys(this.integrations)){let{expression:l}=this.integrations[n];this.integrations[n].enabled=s.match(l)!==null}}catch{tt.error("Failed to find body for requestId",r)}}return this.integrations}};import ve from"lighthouse-logger";var F=class extends d{async getResponseBody(t,a){try{let{body:i}=await t.sendCommand("Network.getResponseBody",{requestId:a});return i}catch{return ve.error("Failed to find body for requestId",a),""}}async gather(){let{driver:{defaultSession:t,networkMonitor:a}}=this.context,i={},r=a._networkRecorder._records.find(n=>n.url.includes("fullstory.com/rec/page"));if(!r)return{};let s=a._networkRecorder._records.find(n=>n.url.includes("fullstory.com/s/settings/"));if(s){let n=await this.getResponseBody(t,s.requestId);i={...i,...JSON.parse(n)}}else ve.warn("Failed to find rec/page request");if(r){let n=await this.getResponseBody(t,r.requestId);i={...i,...JSON.parse(n)}}return i}};var xe=["0","Object","Function","Array","Number","parseFloat","parseInt","Infinity","NaN","undefined","Boolean","String","Symbol","Date","Promise","RegExp","Error","AggregateError","EvalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","globalThis","JSON","Math","Intl","ArrayBuffer","Atomics","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","Uint8ClampedArray","BigUint64Array","BigInt64Array","DataView","Map","BigInt","Set","WeakMap","WeakSet","Proxy","Reflect","FinalizationRegistry","WeakRef","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape","eval","isFinite","isNaN","console","Option","Image","Audio","webkitURL","webkitRTCPeerConnection","webkitMediaStream","WebKitMutationObserver","WebKitCSSMatrix","XSLTProcessor","XPathResult","XPathExpression","XPathEvaluator","XMLSerializer","XMLHttpRequestUpload","XMLHttpRequestEventTarget","XMLHttpRequest","XMLDocument","WritableStreamDefaultWriter","WritableStreamDefaultController","WritableStream","Worker","Window","WheelEvent","WebSocket","WebGLVertexArrayObject","WebGLUniformLocation","WebGLTransformFeedback","WebGLTexture","WebGLSync","WebGLShaderPrecisionFormat","WebGLShader","WebGLSampler","WebGLRenderingContext","WebGLRenderbuffer","WebGLQuery","WebGLProgram","WebGLFramebuffer","WebGLContextEvent","WebGLBuffer","WebGLActiveInfo","WebGL2RenderingContext","WaveShaperNode","VisualViewport","VirtualKeyboardGeometryChangeEvent","ValidityState","VTTCue","UserActivation","URLSearchParams","URLPattern","URL","UIEvent","TrustedTypePolicyFactory","TrustedTypePolicy","TrustedScriptURL","TrustedScript","TrustedHTML","TreeWalker","TransitionEvent","TransformStreamDefaultController","TransformStream","TrackEvent","TouchList","TouchEvent","Touch","TimeRanges","TextTrackList","TextTrackCueList","TextTrackCue","TextTrack","TextMetrics","TextEvent","TextEncoderStream","TextEncoder","TextDecoderStream","TextDecoder","Text","TaskSignal","TaskPriorityChangeEvent","TaskController","TaskAttributionTiming","SyncManager","SubmitEvent","StyleSheetList","StyleSheet","StylePropertyMapReadOnly","StylePropertyMap","StorageEvent","Storage","StereoPannerNode","StaticRange","SourceBufferList","SourceBuffer","ShadowRoot","Selection","SecurityPolicyViolationEvent","ScriptProcessorNode","ScreenOrientation","Screen","Scheduling","Scheduler","SVGViewElement","SVGUseElement","SVGUnitTypes","SVGTransformList","SVGTransform","SVGTitleElement","SVGTextPositioningElement","SVGTextPathElement","SVGTextElement","SVGTextContentElement","SVGTSpanElement","SVGSymbolElement","SVGSwitchElement","SVGStyleElement","SVGStringList","SVGStopElement","SVGSetElement","SVGScriptElement","SVGSVGElement","SVGRectElement","SVGRect","SVGRadialGradientElement","SVGPreserveAspectRatio","SVGPolylineElement","SVGPolygonElement","SVGPointList","SVGPoint","SVGPatternElement","SVGPathElement","SVGNumberList","SVGNumber","SVGMetadataElement","SVGMatrix","SVGMaskElement","SVGMarkerElement","SVGMPathElement","SVGLinearGradientElement","SVGLineElement","SVGLengthList","SVGLength","SVGImageElement","SVGGraphicsElement","SVGGradientElement","SVGGeometryElement","SVGGElement","SVGForeignObjectElement","SVGFilterElement","SVGFETurbulenceElement","SVGFETileElement","SVGFESpotLightElement","SVGFESpecularLightingElement","SVGFEPointLightElement","SVGFEOffsetElement","SVGFEMorphologyElement","SVGFEMergeNodeElement","SVGFEMergeElement","SVGFEImageElement","SVGFEGaussianBlurElement","SVGFEFuncRElement","SVGFEFuncGElement","SVGFEFuncBElement","SVGFEFuncAElement","SVGFEFloodElement","SVGFEDropShadowElement","SVGFEDistantLightElement","SVGFEDisplacementMapElement","SVGFEDiffuseLightingElement","SVGFEConvolveMatrixElement","SVGFECompositeElement","SVGFEComponentTransferElement","SVGFEColorMatrixElement","SVGFEBlendElement","SVGEllipseElement","SVGElement","SVGDescElement","SVGDefsElement","SVGComponentTransferFunctionElement","SVGClipPathElement","SVGCircleElement","SVGAnimationElement","SVGAnimatedTransformList","SVGAnimatedString","SVGAnimatedRect","SVGAnimatedPreserveAspectRatio","SVGAnimatedNumberList","SVGAnimatedNumber","SVGAnimatedLengthList","SVGAnimatedLength","SVGAnimatedInteger","SVGAnimatedEnumeration","SVGAnimatedBoolean","SVGAnimatedAngle","SVGAnimateTransformElement","SVGAnimateMotionElement","SVGAnimateElement","SVGAngle","SVGAElement","Response","ResizeObserverSize","ResizeObserverEntry","ResizeObserver","Request","ReportingObserver","ReadableStreamDefaultReader","ReadableStreamDefaultController","ReadableStreamBYOBRequest","ReadableStreamBYOBReader","ReadableStream","ReadableByteStreamController","Range","RadioNodeList","RTCTrackEvent","RTCStatsReport","RTCSessionDescription","RTCSctpTransport","RTCRtpTransceiver","RTCRtpSender","RTCRtpReceiver","RTCPeerConnectionIceEvent","RTCPeerConnectionIceErrorEvent","RTCPeerConnection","RTCIceTransport","RTCIceCandidate","RTCErrorEvent","RTCError","RTCEncodedVideoFrame","RTCEncodedAudioFrame","RTCDtlsTransport","RTCDataChannelEvent","RTCDataChannel","RTCDTMFToneChangeEvent","RTCDTMFSender","RTCCertificate","PromiseRejectionEvent","ProgressEvent","Profiler","ProcessingInstruction","PopStateEvent","PointerEvent","PluginArray","Plugin","PictureInPictureWindow","PictureInPictureEvent","PeriodicWave","PerformanceTiming","PerformanceServerTiming","PerformanceResourceTiming","PerformancePaintTiming","PerformanceObserverEntryList","PerformanceObserver","PerformanceNavigationTiming","PerformanceNavigation","PerformanceMeasure","PerformanceMark","PerformanceLongTaskTiming","PerformanceEventTiming","PerformanceEntry","PerformanceElementTiming","Performance","Path2D","PannerNode","PageTransitionEvent","OverconstrainedError","OscillatorNode","OffscreenCanvasRenderingContext2D","OffscreenCanvas","OfflineAudioContext","OfflineAudioCompletionEvent","NodeList","NodeIterator","NodeFilter","Node","NetworkInformation","Navigator","NavigationTransition","NavigationHistoryEntry","NavigationDestination","NavigationCurrentEntryChangeEvent","Navigation","NavigateEvent","NamedNodeMap","MutationRecord","MutationObserver","MouseEvent","MimeTypeArray","MimeType","MessagePort","MessageEvent","MessageChannel","MediaStreamTrackProcessor","MediaStreamTrackGenerator","MediaStreamTrackEvent","MediaStreamTrack","MediaStreamEvent","MediaStreamAudioSourceNode","MediaStreamAudioDestinationNode","MediaStream","MediaSourceHandle","MediaSource","MediaRecorder","MediaQueryListEvent","MediaQueryList","MediaList","MediaError","MediaEncryptedEvent","MediaElementAudioSourceNode","MediaCapabilities","MathMLElement","Location","LayoutShiftAttribution","LayoutShift","LargestContentfulPaint","KeyframeEffect","KeyboardEvent","IntersectionObserverEntry","IntersectionObserver","InputEvent","InputDeviceInfo","InputDeviceCapabilities","ImageData","ImageCapture","ImageBitmapRenderingContext","ImageBitmap","IdleDeadline","IIRFilterNode","IDBVersionChangeEvent","IDBTransaction","IDBRequest","IDBOpenDBRequest","IDBObjectStore","IDBKeyRange","IDBIndex","IDBFactory","IDBDatabase","IDBCursorWithValue","IDBCursor","History","Headers","HashChangeEvent","HTMLVideoElement","HTMLUnknownElement","HTMLUListElement","HTMLTrackElement","HTMLTitleElement","HTMLTimeElement","HTMLTextAreaElement","HTMLTemplateElement","HTMLTableSectionElement","HTMLTableRowElement","HTMLTableElement","HTMLTableColElement","HTMLTableCellElement","HTMLTableCaptionElement","HTMLStyleElement","HTMLSpanElement","HTMLSourceElement","HTMLSlotElement","HTMLSelectElement","HTMLScriptElement","HTMLQuoteElement","HTMLProgressElement","HTMLPreElement","HTMLPictureElement","HTMLParamElement","HTMLParagraphElement","HTMLOutputElement","HTMLOptionsCollection","HTMLOptionElement","HTMLOptGroupElement","HTMLObjectElement","HTMLOListElement","HTMLModElement","HTMLMeterElement","HTMLMetaElement","HTMLMenuElement","HTMLMediaElement","HTMLMarqueeElement","HTMLMapElement","HTMLLinkElement","HTMLLegendElement","HTMLLabelElement","HTMLLIElement","HTMLInputElement","HTMLImageElement","HTMLIFrameElement","HTMLHtmlElement","HTMLHeadingElement","HTMLHeadElement","HTMLHRElement","HTMLFrameSetElement","HTMLFrameElement","HTMLFormElement","HTMLFormControlsCollection","HTMLFontElement","HTMLFieldSetElement","HTMLEmbedElement","HTMLElement","HTMLDocument","HTMLDivElement","HTMLDirectoryElement","HTMLDialogElement","HTMLDetailsElement","HTMLDataListElement","HTMLDataElement","HTMLDListElement","HTMLCollection","HTMLCanvasElement","HTMLButtonElement","HTMLBodyElement","HTMLBaseElement","HTMLBRElement","HTMLAudioElement","HTMLAreaElement","HTMLAnchorElement","HTMLAllCollection","GeolocationPositionError","GeolocationPosition","GeolocationCoordinates","Geolocation","GamepadHapticActuator","GamepadEvent","GamepadButton","Gamepad","GainNode","FormDataEvent","FormData","FontFaceSetLoadEvent","FontFace","FocusEvent","FileReader","FileList","File","FeaturePolicy","External","EventTarget","EventSource","EventCounts","Event","ErrorEvent","ElementInternals","Element","DynamicsCompressorNode","DragEvent","DocumentType","DocumentFragment","Document","DelayNode","DecompressionStream","DataTransferItemList","DataTransferItem","DataTransfer","DOMTokenList","DOMStringMap","DOMStringList","DOMRectReadOnly","DOMRectList","DOMRect","DOMQuad","DOMPointReadOnly","DOMPoint","DOMParser","DOMMatrixReadOnly","DOMMatrix","DOMImplementation","DOMException","DOMError","CustomStateSet","CustomEvent","CustomElementRegistry","Crypto","CountQueuingStrategy","ConvolverNode","ConstantSourceNode","CompressionStream","CompositionEvent","Comment","CloseEvent","ClipboardEvent","CharacterData","ChannelSplitterNode","ChannelMergerNode","CanvasRenderingContext2D","CanvasPattern","CanvasGradient","CanvasCaptureMediaStreamTrack","CSSVariableReferenceValue","CSSUnparsedValue","CSSUnitValue","CSSTranslate","CSSTransformValue","CSSTransformComponent","CSSSupportsRule","CSSStyleValue","CSSStyleSheet","CSSStyleRule","CSSStyleDeclaration","CSSSkewY","CSSSkewX","CSSSkew","CSSScale","CSSRuleList","CSSRule","CSSRotate","CSSPropertyRule","CSSPositionValue","CSSPerspective","CSSPageRule","CSSNumericValue","CSSNumericArray","CSSNamespaceRule","CSSMediaRule","CSSMatrixComponent","CSSMathValue","CSSMathSum","CSSMathProduct","CSSMathNegate","CSSMathMin","CSSMathMax","CSSMathInvert","CSSMathClamp","CSSLayerStatementRule","CSSLayerBlockRule","CSSKeywordValue","CSSKeyframesRule","CSSKeyframeRule","CSSImportRule","CSSImageValue","CSSGroupingRule","CSSFontPaletteValuesRule","CSSFontFaceRule","CSSCounterStyleRule","CSSContainerRule","CSSConditionRule","CSS","CDATASection","ByteLengthQueuingStrategy","BroadcastChannel","BlobEvent","Blob","BiquadFilterNode","BeforeUnloadEvent","BeforeInstallPromptEvent","BaseAudioContext","BarProp","AudioWorkletNode","AudioSinkInfo","AudioScheduledSourceNode","AudioProcessingEvent","AudioParamMap","AudioParam","AudioNode","AudioListener","AudioDestinationNode","AudioContext","AudioBufferSourceNode","AudioBuffer","Attr","AnimationEvent","AnimationEffect","Animation","AnalyserNode","AbstractRange","AbortSignal","AbortController","window","self","document","name","location","customElements","history","navigation","locationbar","menubar","personalbar","scrollbars","statusbar","toolbar","status","closed","frames","length","top","opener","parent","frameElement","navigator","origin","external","screen","innerWidth","innerHeight","scrollX","pageXOffset","scrollY","pageYOffset","visualViewport","screenX","screenY","outerWidth","outerHeight","devicePixelRatio","event","clientInformation","offscreenBuffering","screenLeft","screenTop","styleMedia","onsearch","isSecureContext","trustedTypes","performance","onappinstalled","onbeforeinstallprompt","crypto","indexedDB","sessionStorage","localStorage","onbeforexrselect","onabort","onbeforeinput","onblur","oncancel","oncanplay","oncanplaythrough","onchange","onclick","onclose","oncontextlost","oncontextmenu","oncontextrestored","oncuechange","ondblclick","ondrag","ondragend","ondragenter","ondragleave","ondragover","ondragstart","ondrop","ondurationchange","onemptied","onended","onerror","onfocus","onformdata","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onload","onloadeddata","onloadedmetadata","onloadstart","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseout","onmouseover","onmouseup","onmousewheel","onpause","onplay","onplaying","onprogress","onratechange","onreset","onresize","onscroll","onsecuritypolicyviolation","onseeked","onseeking","onselect","onslotchange","onstalled","onsubmit","onsuspend","ontimeupdate","ontoggle","onvolumechange","onwaiting","onwebkitanimationend","onwebkitanimationiteration","onwebkitanimationstart","onwebkittransitionend","onwheel","onauxclick","ongotpointercapture","onlostpointercapture","onpointerdown","onpointermove","onpointerrawupdate","onpointerup","onpointercancel","onpointerover","onpointerout","onpointerenter","onpointerleave","onselectstart","onselectionchange","onanimationend","onanimationiteration","onanimationstart","ontransitionrun","ontransitionstart","ontransitionend","ontransitioncancel","onafterprint","onbeforeprint","onbeforeunload","onhashchange","onlanguagechange","onmessage","onmessageerror","onoffline","ononline","onpagehide","onpageshow","onpopstate","onrejectionhandled","onstorage","onunhandledrejection","onunload","crossOriginIsolated","scheduler","alert","atob","blur","btoa","cancelAnimationFrame","cancelIdleCallback","captureEvents","clearInterval","clearTimeout","close","confirm","createImageBitmap","fetch","find","focus","getComputedStyle","getSelection","matchMedia","moveBy","moveTo","open","postMessage","print","prompt","queueMicrotask","releaseEvents","reportError","requestAnimationFrame","requestIdleCallback","resizeBy","resizeTo","scroll","scrollBy","scrollTo","setInterval","setTimeout","stop","structuredClone","webkitCancelAnimationFrame","webkitRequestAnimationFrame","chrome","WebAssembly","fence","caches","cookieStore","ondevicemotion","ondeviceorientation","ondeviceorientationabsolute","launchQueue","sharedStorage","documentPictureInPicture","onbeforematch","onbeforetoggle","AbsoluteOrientationSensor","Accelerometer","AudioWorklet","BatteryManager","Cache","CacheStorage","Clipboard","ClipboardItem","CookieChangeEvent","CookieStore","CookieStoreManager","Credential","CredentialsContainer","CryptoKey","DeviceMotionEvent","DeviceMotionEventAcceleration","DeviceMotionEventRotationRate","DeviceOrientationEvent","FederatedCredential","GPU","GPUAdapter","GPUAdapterInfo","GPUBindGroup","GPUBindGroupLayout","GPUBuffer","GPUBufferUsage","GPUCanvasContext","GPUColorWrite","GPUCommandBuffer","GPUCommandEncoder","GPUCompilationInfo","GPUCompilationMessage","GPUComputePassEncoder","GPUComputePipeline","GPUDevice","GPUDeviceLostInfo","GPUError","GPUExternalTexture","GPUInternalError","GPUMapMode","GPUOutOfMemoryError","GPUPipelineError","GPUPipelineLayout","GPUQuerySet","GPUQueue","GPURenderBundle","GPURenderBundleEncoder","GPURenderPassEncoder","GPURenderPipeline","GPUSampler","GPUShaderModule","GPUShaderStage","GPUSupportedFeatures","GPUSupportedLimits","GPUTexture","GPUTextureUsage","GPUTextureView","GPUUncapturedErrorEvent","GPUValidationError","GravitySensor","Gyroscope","Keyboard","KeyboardLayoutMap","LinearAccelerationSensor","Lock","LockManager","MIDIAccess","MIDIConnectionEvent","MIDIInput","MIDIInputMap","MIDIMessageEvent","MIDIOutput","MIDIOutputMap","MIDIPort","MediaDeviceInfo","MediaDevices","MediaKeyMessageEvent","MediaKeySession","MediaKeyStatusMap","MediaKeySystemAccess","MediaKeys","NavigationPreloadManager","NavigatorManagedData","OrientationSensor","PasswordCredential","RelativeOrientationSensor","Sanitizer","ScreenDetailed","ScreenDetails","Sensor","SensorErrorEvent","ServiceWorker","ServiceWorkerContainer","ServiceWorkerRegistration","StorageManager","SubtleCrypto","VirtualKeyboard","WGSLLanguageFeatures","WebTransport","WebTransportBidirectionalStream","WebTransportDatagramDuplexStream","WebTransportError","Worklet","XRDOMOverlayState","XRLayer","XRWebGLBinding","AudioData","EncodedAudioChunk","EncodedVideoChunk","ImageTrack","ImageTrackList","VideoColorSpace","VideoFrame","AudioDecoder","AudioEncoder","ImageDecoder","VideoDecoder","VideoEncoder","AuthenticatorAssertionResponse","AuthenticatorAttestationResponse","AuthenticatorResponse","PublicKeyCredential","BarcodeDetector","Bluetooth","BluetoothCharacteristicProperties","BluetoothDevice","BluetoothRemoteGATTCharacteristic","BluetoothRemoteGATTDescriptor","BluetoothRemoteGATTServer","BluetoothRemoteGATTService","CaptureController","DocumentPictureInPicture","EyeDropper","Fence","FencedFrameConfig","HTMLFencedFrameElement","FileSystemDirectoryHandle","FileSystemFileHandle","FileSystemHandle","FileSystemWritableFileStream","FontData","FragmentDirective","HID","HIDConnectionEvent","HIDDevice","HIDInputReportEvent","IdentityCredential","IdentityProvider","IdleDetector","LaunchParams","LaunchQueue","Mojo","MojoHandle","MojoWatcher","OTPCredential","PaymentAddress","PaymentRequest","PaymentResponse","PaymentMethodChangeEvent","Presentation","PresentationAvailability","PresentationConnection","PresentationConnectionAvailableEvent","PresentationConnectionCloseEvent","PresentationConnectionList","PresentationReceiver","PresentationRequest","Serial","SerialPort","SharedStorage","SharedStorageWorklet","ToggleEvent","USB","USBAlternateInterface","USBConfiguration","USBConnectionEvent","USBDevice","USBEndpoint","USBInTransferResult","USBInterface","USBIsochronousInTransferPacket","USBIsochronousInTransferResult","USBIsochronousOutTransferPacket","USBIsochronousOutTransferResult","USBOutTransferResult","WakeLock","WakeLockSentinel","WindowControlsOverlay","WindowControlsOverlayGeometryChangeEvent","XRAnchor","XRAnchorSet","XRBoundedReferenceSpace","XRCPUDepthInformation","XRCamera","XRDepthInformation","XRFrame","XRHitTestResult","XRHitTestSource","XRInputSource","XRInputSourceArray","XRInputSourceEvent","XRInputSourcesChangeEvent","XRLightEstimate","XRLightProbe","XRPose","XRRay","XRReferenceSpace","XRReferenceSpaceEvent","XRRenderState","XRRigidTransform","XRSession","XRSessionEvent","XRSpace","XRSystem","XRTransientInputHitTestResult","XRTransientInputHitTestSource","XRView","XRViewerPose","XRViewport","XRWebGLDepthInformation","XRWebGLLayer","getScreenDetails","openDatabase","queryLocalFonts","showDirectoryPicker","showOpenFilePicker","showSaveFilePicker","originAgentCluster","credentialless","speechSynthesis","oncontentvisibilityautostatechange","onscrollend","AnimationPlaybackEvent","AnimationTimeline","CSSAnimation","CSSTransition","DocumentTimeline","BackgroundFetchManager","BackgroundFetchRecord","BackgroundFetchRegistration","BluetoothUUID","BrowserCaptureMediaStreamTrack","CropTarget","CSSStartingStyleRule","ContentVisibilityAutoStateChangeEvent","DelegatedInkTrailPresenter","Ink","DocumentPictureInPictureEvent","Highlight","HighlightRegistry","MediaMetadata","MediaSession","MutationEvent","NavigatorUAData","Notification","PaymentManager","PaymentRequestUpdateEvent","PeriodicSyncManager","PermissionStatus","Permissions","PushManager","PushSubscription","PushSubscriptionOptions","RemotePlayback","ScrollTimeline","ViewTimeline","SharedWorker","SpeechSynthesisErrorEvent","SpeechSynthesisEvent","SpeechSynthesisUtterance","VideoPlaybackQuality","ViewTransition","VisibilityStateEntry","webkitSpeechGrammar","webkitSpeechGrammarList","webkitSpeechRecognition","webkitSpeechRecognitionError","webkitSpeechRecognitionEvent","webkitRequestFileSystem","webkitResolveLocalFileSystemURL","JSCompiler_renameProperty","dir","dirxml","profile","profileEnd","table","keys","values","debug","undebug","monitor","unmonitor","inspect","copy","queryObjects","$_","$0","$1","$2","$3","$4","getEventListeners","getAccessibleName","getAccessibleRole","monitorEvents","unmonitorEvents","$","$$","$x"];function rt(){let e=[];for(let t of Object.getOwnPropertyNames(window)){let a=globalThis[t];if(a!==null){let i=!1,r=typeof a;try{i=a.toString().indexOf("[native code]")>-1,e.push({variable:t,isNative:i,type:r})}catch(s){e.push({variable:t,isNative:i,type:r,error:s.message})}}}return e}var H=class extends d{async gather(){return(await this.evaluate(rt)).filter(i=>!i.isNative).filter(i=>!xe.includes(i.variable))}};import at from"lighthouse-logger";var N=class extends d{async gather(){let{driver:t}=this.context,a=[];for(let i of t.networkMonitor._networkRecorder._records){let{mimeType:r,requestId:s,requestMethod:n,resourceType:l,statusCode:f,url:Ye}=i;if((l==="XHR"||l==="Fetch")&&r==="application/json"){let Se="";try{n==="POST"&&(Se=(await t.defaultSession.sendCommand("Network.getRequestPostData",{requestId:s})).postData);let{body:Ie}=await t.defaultSession.sendCommand("Network.getResponseBody",{requestId:s});a.push({requestId:s,postData:Se,response:Ie,statusCode:f,url:Ye})}catch{at.warn("Failed to find XHR or fetch request with ID",s)}}}return a}};var we=[{displayName:"Adobe App Measurement",variable:"s",type:"object"},{displayName:"Adobe App Measurement",variable:"s_c_il[1]",type:"object"},{displayName:"Customer Experience Digital Data Layer",variable:"digitalData",type:"object"},{displayName:"Google Analytics",variable:"dataLayer",type:"array"},{displayName:"Tealium iQ",variable:"utag.data",type:"object"}];function Ee(e){let t=["currencyCode","visitorID","campaign","channel","eVar","event","hier","pageName","pageType","products","prop","purchaseID","state","transactionID","zip"],a={};for(let i of Object.getOwnPropertyNames(e))t.find(r=>i.startsWith(r))&&(a[i]=e[i]);return a}function Ce(e){return e.startsWith("eVar")||e.startsWith("prop")}function De(e){return["cart","page","product","transaction","event"].find(t=>e.startsWith(t))!==void 0}function Te(e){let t=["gtm.","optimize.domChange"];return e[0]?e[0]==="event":typeof e.event=="string"&&t.find(a=>e.event.startsWith(a))===void 0||e.ecommerce!==void 0}function Re(e){return["brand_","browse_","cart_","category_","customer_","language_","page_","product_","order_","search_","site_","tealium_event"].find(t=>e.startsWith(t))!==void 0}function ae(e,t=new WeakSet,a={}){t.add(e);for(let i of Object.getOwnPropertyNames(e)){let r=e[i];if(r!=null)if(typeof r==="object")if(Array.isArray(r))r.length>0&&typeof r[0]!="object"&&(a[i]=r);else try{!t.has(r)&&Object.getOwnPropertyNames(r).length>0&&(a[i]=ae(r,t))}catch{}else r!==""&&(a[i]=r)}return a}function it(e){try{let t=globalThis.eval(e);try{return JSON.stringify(t)}catch{return JSON.stringify(serialize(t))}}catch{return""}}var V=class extends d{async gather(){let t=[];for(let a of we){let i=await this.evaluate(it,[a.variable],[ae]);i&&t.push({...a,content:i})}return t}};function st(){let e=[],t=[];for(let a of document.querySelectorAll("[itemscope]")){let i=a.getAttribute("itemid")||void 0,r=a.getAttribute("itemtype")||void 0,s=Array.from(a.querySelectorAll("[itemprop]")),n=s.map(l=>l.getAttribute("itemprop")).filter(l=>l!==null);e.push({id:i,properties:n,type:r}),t=t.concat(s)}for(let a of document.querySelectorAll("[itemprop]"))t.find(i=>a===i)||e.push({properties:[a.getAttribute("itemprop")||""]});return e}var U=class extends d{static id="Microdata";async gather(){return this.evaluate(st)}};var Me={AriaAttributes:D,AriaRoles:T,DataLayers:V,DataAttributes:R,ElementAttributes:C,IdElements:O,Integrations:k,LinkedData:L,Microdata:U,NamedElements:P,OrgSettings:F,WatchedElements:G,WindowVars:H,XhrNetwork:N};function Le(e){let t=["devtoolsLogs","MetaElements","URL"],a=new Set;return Object.values(e).reduce((r,s)=>r.concat(s)).map(r=>r.meta.requiredArtifacts).reduce((r,s)=>r.concat(s)).forEach(r=>{a.add(r)}),Array.from(a.values()).filter(r=>!t.includes(r)).map(r=>({id:r,gatherer:{implementation:Me[r]}}))}function Pe(e){return Object.values(e).reduce((a,i)=>a.concat(i),[]).map(a=>({implementation:a}))}function I(e,t){return t[e].map(a=>({id:a.meta.id,weight:1}))}import{Audit as ie}from"lighthouse";var B=class e extends ie{static artifacts=["AriaAttributes"];static get meta(){return{id:"fs-aria-attributes",title:"ARIA Properties and States",description:'ARIA properties and states can be used to give elements extra meaning or semantics. As an example, `aria-required="true"` specifies that a form input needs to be filled in order to be valid. ARIA properties define the current conditions of elements, such as `aria-disabled="true"`, which specifies to a screen reader that a form input is currently disabled. States differ from properties in that properties don\'t change throughout the lifecycle of an app, whereas states can change, generally programmatically via JavaScript.',scoreDisplayMode:ie.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{AriaAttributes:a}=t,i=a.sort((r,s)=>r.name.localeCompare(s.name)).map(r=>({name:r.name,count:r.count,subItems:{type:"subitems",items:[{value:r.values.length>10?`${r.values.slice(0,10).join(", ")},... (${r.values.length-10} more)`:r.values.join(", ")}]}}));return{score:null,details:ie.makeTableDetails([{key:"name",valueType:"text",label:"Attribute",subItemsHeading:{key:"value",valueType:"text"}},{key:"count",label:"Count",valueType:"numeric",granularity:1}],i),notApplicable:a.length===0}}};import{Audit as se}from"lighthouse";var j=class e extends se{static artifacts=["AriaRoles"];static get meta(){return{id:"fs-aria-roles",title:"ARIA Roles",description:'[ARIA roles](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles) provide semantic meaning to content, allowing screen readers and other tools to present and support interaction with an object in a way that is consistent with user expectations of that type of object. ARIA roles are added to HTML elements using role="role type", where role type is the name of a role in the ARIA specification.',scoreDisplayMode:se.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{AriaRoles:a}=t,[i]=a,r=i?i.values.sort((s,n)=>s.localeCompare(n)).map(s=>({role:s})):[];return{score:null,details:se.makeTableDetails([{key:"role",valueType:"text",label:"Role"}],r),notApplicable:a.length===0}}};import{Audit as ne}from"lighthouse";var W=class e extends ne{static artifacts=["DataAttributes"];static get meta(){return{id:"fs-data-attributes",title:"Data Attributes",description:"[Data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes) allow you to store extra information on standard, semantic HTML elements. Any attribute on any element whose attribute name starts with `data-` is a data attribute.",scoreDisplayMode:ne.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{DataAttributes:a}=t,i=a.sort((r,s)=>s.count-r.count).map(r=>({name:r.name,count:r.count,score:r.score,subItems:{type:"subitems",items:[{value:r.values.length>10?`${r.values.slice(0,10).join(", ")},... (${r.values.length-10} more)`:r.values.join(", ")}]}}));return{score:null,details:ne.makeTableDetails([{key:"name",valueType:"text",label:"Attribute",subItemsHeading:{key:"value",valueType:"text"}},{key:"count",label:"Count",valueType:"numeric",granularity:1},{key:"score",label:"Score",valueType:"numeric",granularity:1}],i),notApplicable:a.length===0}}};import{Audit as Ge}from"lighthouse";import{Audit as nt}from"lighthouse";var ot={explanationCaptureOff:"(web capture is off)"},oe=class e extends nt{static NOT_APPLICABLE_CAPTURE_OFF={score:null,notApplicable:!0,explanation:ot.explanationCaptureOff};static get artifacts(){return["devtoolsLogs","URL","DataLayers","ElementAttributes","IdentifiedElements","Integrations","NamedElements","OrgSettings","WatchedElements","WindowVars","XhrNetwork"].map(t=>t)}static createMeta(t,a){let i=t.indexOf("/")>-1?e.toId(t):t,{title:r,failureTitle:s,description:n}=a;return{id:i,title:r,failureTitle:s,description:n,requiredArtifacts:e.artifacts}}static hasCaptureSettings(t){let{OrgSettings:a}=t;return Object.getOwnPropertyNames(a).length>0}static makeExplanation(t,a,i){let{explanations:r}=a;if(!r||!r[t])throw Error(`Explanation ${t} not found. Add it to UIStrings with an appropriate display value.`);let s=r[t];if(i)for(let n of Object.keys(i))s=s.replaceAll(`{${n}}`,i[n].toString());return s.startsWith("(")&&s.endsWith(")")?s:`(${s})`}static toId(t){return t.substring(t.lastIndexOf("/")+1,t.lastIndexOf("."))}};import{Audit as lt}from"lighthouse";var ct={company:{label:"Company",valueType:"text"},category:{label:"Category",valueType:"text"},count:{label:"Count",valueType:"numeric",granularity:1},default:{label:"Default",valueType:"text"},domain:{label:"Domain",valueType:"text"},eventObject:{label:"Event",valueType:"code"},key:{label:"Key",valueType:"text"},name:{label:"Category",valueType:"text"},node:{label:"Node",valueType:"node"},objectType:{label:"Object Type",valueType:"text"},path:{label:"Path",valueType:"text"},score:{valueType:"numeric",granularity:.01,label:"Score"},regex:{label:"Expression",valueType:"code"},requestAllowlist:{label:"Request Capture",valueType:"code"},responseAllowlist:{label:"Response Capture",valueType:"code"},ruleset:{label:"Ruleset",valueType:"text"},selector:{label:"CSS Selector",valueType:"code"},status:{label:"Status",valueType:"text"},statusCode:{valueType:"text",label:"Status Code"},url:{label:"URL",valueType:"url"},value:{label:"Value",valueType:"text"},variable:{label:"Variable",valueType:"text"}},g=class e{static makeHeading(t){return{...ct[t],key:t}}static makeDetails(t,a){return lt.makeTableDetails(t.map(i=>e.makeHeading(i)),a.map(i=>({...i})))}};var q=class e extends Ge{static artifacts=["DataLayers"];static get meta(){return{id:"fs-data-layer-adobe",title:"Adobe Analytics",description:'Ingest data from Adobe Analytics. To enable Adobe Analytics data capture, review the [FullStory Help Center](https://help.fullstory.com/hc/en-us/articles/5068617231383). Note that properties with "Yes" are captured by default; other properties will require [custom capture rules](https://help.fullstory.com/hc/en-us/articles/360057598393-Data-Layer-Capture#01ER0G03PMZAF3XJAH6H4AW0G8).',scoreDisplayMode:Ge.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{DataLayers:a}=t,i=a.find(({variable:n})=>n==="s"),r=a.find(({variable:n})=>n==="s_c_il[1]"),s=i||r;if(!s||!s.content)return{score:null,notApplicable:!0};{let n=JSON.parse(s.content),l=Object.getOwnPropertyNames(Ee(n)).sort().map(f=>({default:Ce(f)?"Yes":"",key:f,value:JSON.stringify(n[f],null,1)}));return{score:null,details:g.makeDetails(["default","key","value"],l)}}}};import{Audit as Oe}from"lighthouse";var $=class e extends Oe{static artifacts=["DataLayers"];static get meta(){return{id:"fs-data-layer-ceddl",title:"Customer Experience Digital Data Layer",failureTitle:"Customer Experience Digital Data Layer not found",description:'Ingest data from Customer Experience Digital Data Layer (CEDDL). To enable CEDDL data capture, review the [FullStory Help Center](https://help.fullstory.com/hc/en-us/articles/5069700093847-Customer-Experience-Digital-Data-Layer-1-0). Note that properties with "Yes" are captured by default; other properties will require [custom capture rules](https://help.fullstory.com/hc/en-us/articles/360057598393-Data-Layer-Capture#01ER0G03PMZAF3XJAH6H4AW0G8).',scoreDisplayMode:Oe.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{DataLayers:a}=t,i=a.find(({displayName:r})=>r==="Customer Experience Digital Data Layer");if(!i||!i.content)return{score:null,notApplicable:!0};{let r=JSON.parse(i.content),s=Object.getOwnPropertyNames(r).sort().map(n=>({default:De(n),key:n,value:JSON.stringify(r[n],null,1)}));return{score:null,details:g.makeDetails(["default","key","value"],s)}}}};import{Audit as Fe}from"lighthouse";var K=class e extends Fe{static artifacts=["DataLayers"];static get meta(){return{id:"data-layer-google",title:"Google Analytics",failureTitle:"Google Analytics not found",description:'Ingest data from Google Analytics. To enable Google Analytics data capture, review the [FullStory Help Center](https://help.fullstory.com/hc/en-us/articles/360020623414#01H4K8QSKEKHE5NKV0FASCSDC6). Note that events with "Yes" are captured by default; other events will require [custom capture rules](https://help.fullstory.com/hc/en-us/articles/360057598393-Data-Layer-Capture#01ER0G03PMZAF3XJAH6H4AW0G8).',scoreDisplayMode:Fe.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{DataLayers:a}=t,i=a.find(({displayName:r})=>r==="Google Analytics");if(!i||!i.content||!Array.isArray(JSON.parse(i.content)))return{score:null,notApplicable:!0};{let s=JSON.parse(i.content).filter(n=>{try{return n["0]"]?n["0]"]==="event"&&!n[0].toString().startsWith("gtm"):n.event&&!n.event.toString().startsWith("gtm")}catch{return!0}}).filter(n=>{let l=["OneTrustGroupsUpdated","OneTrustLoaded","OptanonLoaded"];try{return n["0]"]?n[0]&&!l.includes(n[0].toString()):n.event&&!l.includes(n.event.toString())}catch{return!0}}).map(n=>({default:Te(n)?"Yes":"",type:n.ecommerce||n.items?"Enhanced E-commerce":typeof n.event=="string"?"Event Measurement":"Custom",eventObject:JSON.stringify(n,null,1)}));return{score:null,details:g.makeDetails(["default","eventObject"],s),warnings:s.length===0?["No data layer events found; however, events may be created based on user interaction with the page."]:void 0}}}};import{Audit as He}from"lighthouse";var J=class e extends He{static artifacts=["DataLayers"];static get meta(){return{id:"fs-data-layer-tealium",title:"Tealium Retail Data",description:'Ingest data from Tealium IQ\u2019s data layer. To enable Tealium Retail data capture, review the [FullStory Help Center](https://help.fullstory.com/hc/en-us/articles/360020829093-Tealium-#01G1H6NJ0HV1SYBWAPY24PTW9P). Note that properties with "Yes" are captured by default; other properties will require [custom capture rules](https://help.fullstory.com/hc/en-us/articles/360057598393-Data-Layer-Capture#01ER0G03PMZAF3XJAH6H4AW0G8).',scoreDisplayMode:He.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{DataLayers:a}=t,i=a.find(({displayName:r})=>r==="Tealium iQ");if(!i||!i.content)return{score:null,notApplicable:!0};{let r=JSON.parse(i.content),s=Object.getOwnPropertyNames(r).sort().map(n=>({default:Re(n)?"Yes":"",key:n,value:JSON.stringify(r[n],null,1)}));return{score:null,details:g.makeDetails(["default","key","value"],s)}}}};import{Audit as y}from"lighthouse";var dt=["body","iframe","script","style","svg"];function le(e,t=!0){let a=e.filter(i=>!dt.includes(i.tagName)).map(i=>({node:y.makeNodeItem(i.node),link:{text:"Open",type:"link",url:`https://app.fullstory.com/ui/org/settings/elements?name=${i.textContent}&css=${i.node.selector}`}})).filter(i=>t?i.node.boundingRect&&i.node.boundingRect.height>0:!0);return{score:null,details:y.makeTableDetails([{key:"node",label:"Node",valueType:"node"},{key:"link",label:"Data Studio",valueType:"link"}],a),notApplicable:a.length===0}}var _=class e extends y{static artifacts=["IdElements"];static get meta(){return{id:"fs-id-elements",description:"Lists elements found on the page that have identifiers.",scoreDisplayMode:y.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts],title:"Stable Elements"}}static audit(t){let{IdElements:a}=t;return le(a,!1)}},X=class e extends y{static artifacts=["NamedElements"];static meta={id:"fs-named-elements",title:"Named Elements",description:"Lists elements found on the page that have names already provided in HTML code or appear to be significant and can be named in FullStory.",requiredArtifacts:[...e.artifacts],scoreDisplayMode:y.SCORING_MODES.INFORMATIVE};static audit(t){let{NamedElements:a}=t;return le(a.filter(i=>!i.hidden))}},z=class e extends y{static artifacts=["WatchedElements"];static get meta(){return{id:"fs-watched-elements",description:"Lists elements found on the page that appear to be significant.",scoreDisplayMode:y.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts],title:"Watched Elements"}}static audit(t){let{WatchedElements:a}=t;return le(a,!1)}};import{Audit as ge}from"lighthouse";import ya from"debug";function E(e){return`${e.type}:${e.orgId}:${e.id}`}import pt from"debug";var mt="fullstory",p=class e{namespace;static padding=12;marks={};constructor(t){this.namespace=t}static instanceOf(t){return t.length>e.padding&&(e.padding=t.length),new e(t)}debug(t,...a){let i="".padStart(e.padding-this.namespace.length," ");pt(`${mt}:${this.namespace.toLowerCase()}`)(`${i}[${Date.now()}] ${t}`,...a)}entry(t){this.marks[t.name]=Date.now(),this.debug(`${t.name}() entry`),e.padding+=2}error(t){this.debug(t.message),t.stack&&this.debug(t.stack)}exit(t){e.padding-=2,this.debug(`${t.name}() exit %dms`,Date.now()-this.marks[t.name])}message(t,a,...i){this.debug(`${typeof t=="object"?E(t):t} ${a}`,...i)}};var Ea=p.instanceOf("alias");var o;(function(e){e.Dashboard="Dashboard",e.DashboardCard="DashboardCard",e.Funnel="Funnel",e.Heatmap="Heatmap",e.Journey="Journey",e.Metric="Metric",e.Retention="Retention",e.Segment="Segment"})(o||(o={}));var c;(function(e){e.CustomEvent="CustomEvent",e.DefinedEvent="DefinedEvent",e.ElementBlock="ElementBlock",e.ElementRetainRule="ElementRetainRule",e.NamedElement="NamedElement",e.Page="Page",e.Spec="Spec",e.MobileRecordingSettings="MobileRecordingSettings",e.WebRecordingSettings="WebRecordingSettings"})(c||(c={}));var A;(function(e){e.Org="Org",e.Space="Space"})(A||(A={}));var ft=[c.NamedElement,c.MobileRecordingSettings,c.WebRecordingSettings,c.Page,o.Heatmap,c.DefinedEvent,o.Segment,o.Metric,o.Funnel,o.Journey,o.Retention,o.Dashboard,o.DashboardCard],yt={[o.Dashboard]:3,[o.DashboardCard]:3,[o.Funnel]:4,[o.Metric]:5,[o.Retention]:6,[o.Segment]:7,[o.Heatmap]:8,[o.Journey]:9};var Pa=p.instanceOf("object");var Ba="0123456789abcdef".split("");var Ne;(function(e){e.AuthenticationExpired="Unauthenticated: Authentication Expired",e.AuthenticationForbidden="Forbidden: Account Plan",e.InstanceRequired="Uninitialized: Instance Required",e.LoginFailedBootstrap="Login Failure: UI Bootstrap",e.LoginFailedOrgs="Login Failure: All Orgs",e.LoginRequired="Unauthenticated: Login Required",e.MissingAuth="Uninitialized: Missing Authentication",e.MissingCredentials="Uninitialized: Missing Credentials",e.MissingSession="Uninitialized: Missing Session",e.RequestError="Request: Unexpected Error",e.UnexpectedDestination="Unauthenticated: Unexpected Destination",e.UnsupportedCredentials="Unsupported: Credentials",e.UnsupportedRealm="Unsupported: Cross Realm"})(Ne||(Ne={}));var za=p.instanceOf("client"),Ya=p.instanceOf("http");var Ue;(function(e){e[e.Off=1]="Off",e[e.On=2]="On"})(Ue||(Ue={}));var ce;(function(e){e[e.All=0]="All",e[e.Allow=1]="Allow",e[e.Block=2]="Block"})(ce||(ce={}));var Jo=p.instanceOf("settings");var $e;(function(e){e[e.Ip=37]="Ip",e[e.Email=4]="Email",e[e.UserId=53]="UserId",e[e.UserName=5]="UserName",e[e.UserAgent=6]="UserAgent",e[e.Browser=10]="Browser",e[e.Device=11]="Device",e[e.Platform=12]="Platform",e[e.Os=13]="Os",e[e.UrlFull=16]="UrlFull",e[e.UrlHost=17]="UrlHost",e[e.UrlFragment=20]="UrlFragment",e[e.UrlPath=44]="UrlPath",e[e.UrlReferrer=21]="UrlReferrer",e[e.UrlReferrerHost=22]="UrlReferrerHost",e[e.UrlReferrerFragment=25]="UrlReferrerFragment",e[e.UrlReferrerPath=45]="UrlReferrerPath",e[e.Text=26]="Text",e[e.Css=27]="Css",e[e.PageId=41]="PageId",e[e.BrowserVersion=42]="BrowserVersion",e[e.NetworkErrorUrl=57]="NetworkErrorUrl",e[e.NetworkErrorUrlHost=58]="NetworkErrorUrlHost",e[e.NetworkErrorPath=43]="NetworkErrorPath"})($e||($e={}));var Ke;(function(e){e[e.Unset=0]="Unset",e[e.Pro=1]="Pro",e[e.Freemium=2]="Freemium",e[e.Business=3]="Business",e[e.Enterprise=4]="Enterprise",e[e.Basic=5]="Basic",e[e.Embed=6]="Embed",e[e.Advanced=7]="Advanced",e[e.Free=8]="Free",e[e.DataDirect=9]="DataDirect"})(Ke||(Ke={}));var Je=[{name:"Bugsnag",windowVar:["Bugsnag","bugsnagClient"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020827233",serviceId:"bugsnag"},{name:"Intercom",windowVar:["Intercom"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020623794-Intercom",serviceId:"intercom"},{name:"Mixpanel",windowVar:["mixpanel"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020623954-Mixpanel",serviceId:"mixpanel"},{name:"Olark",windowVar:["olark"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020624034-Olark",serviceId:"olark"},{name:"Qualtrics",windowVar:["QSI"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360043351233-Qualtrics",serviceId:"qualtrics"},{name:"Adobe Target",windowVar:["mboxDefine","mboxUpdate"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/13970338218391-Adobe-Target"},{name:"Pendo",windowVar:["pendo"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360035800874-Pendo"},{name:"Shopify",windowVar:["Shopify"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020829013-Shopify"},{name:"Unbounce",windowVar:["ub"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020829173-Unbounce"},{name:"GetFeedback Digital",windowVar:["usabilla_live","usblCustom"],helpUrl:""},{name:"AB Tasty",windowVar:["_ABTasty"],helpUrl:"https://support.abtasty.com/hc/en-us/articles/7307852514588-Fullstory"},{name:"Dynamic Yield",windowVar:["DY","dy"],helpUrl:"https://support.dynamicyield.com/hc/en-us/articles/5373413935389-FullStory-Connector"},{name:"Help Scout",windowVar:["HelpScout"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020623434-Help-Scout"},{name:"Kameleoon",windowVar:["kameleoon"],helpUrl:"https://help.kameleoon.com/setting-up-fullstory/"},{name:"LaunchDarkly",windowVar:["LDClient"],helpUrl:"https://docs.launchdarkly.com/integrations/fullstory"},{name:"Rollbar",windowVar:["_rollbarConfig"],helpUrl:"https://docs.rollbar.com/docs/fullstory"},{name:"Rudderstack",windowVar:["rudderanalytics","rudder"],helpUrl:"https://www.rudderstack.com/integration/fullstory/"},{name:"Segment",windowVar:["analytics"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020828993-Segment"},{name:"Split",windowVar:["splitio"],helpUrl:"https://help.split.io/hc/en-us/articles/360045937831-FullStory"},{name:"Tealium",windowVar:["utag"],helpUrl:"https://directory.fullstory.com/integrations/tealium"},{name:"Zendesk",windowVar:["zE"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360020829653-Zendesk"},{name:"Medallia",windowVar:["KAMPYLE_DATA","KAMPYLE_ONSITE_SDK"],helpUrl:"https://help.fullstory.com/hc/en-us/articles/360043356273-Medallia"}];var Hl=p.instanceOf("alias");var _e;(function(e){e.Off="Off",e.On="On"})(_e||(_e={}));var he;(function(e){e.Read="Read",e.Create="Create",e.Update="Update",e.Delete="Delete"})(he||(he={}));var Xe;(function(e){e.None="None",e.Fail="Fail",e.Success="Success"})(Xe||(Xe={}));var Ul=p.instanceOf("transaction");var zl=p.instanceOf("sync");var Y=class e extends ge{static artifacts=["WindowVars"];static get meta(){return{id:"fs-integrations",title:"Client Integrations",description:"Several supported integrations are provided by FullStory and require little to no technical assistance to enable. For a list of supported integrations, see the [FullStory Help Center](https://help.fullstory.com/hc/en-us/categories/360001589654-Integrations).",scoreDisplayMode:ge.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{WindowVars:a}=t,i=a.map(({variable:n})=>n),s=Je.filter(n=>{for(let l of n.windowVar)if(i.includes(l))return n.windowVar=[l],!0;return!1}).map(({name:n,helpUrl:l,windowVar:f})=>({name:{type:"link",text:n,url:l},windowVar:f[0]}));return{score:null,details:ge.makeTableDetails([{key:"name",label:"Name",valueType:"text"},{key:"windowVar",label:"Variable",valueType:"text"}],s),notApplicable:s.length===0}}};import{Audit as fe}from"lighthouse";var Q=class e extends fe{static artifacts=["LinkedData"];static get meta(){return{id:"fs-linked-data",title:"Linked Data (JSON-LD)",description:"[JSON-LD](https://json-ld.org) is a lightweight Linked Data format. Based on the already successful JSON format, JSON-LD provides a way to help JSON data interoperate on the web.",scoreDisplayMode:fe.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{LinkedData:a}=t,i=a.map(r=>{try{return JSON.parse(r.textContent.trim())}catch{return{}}}).map(r=>({type:r["@type"]||"",id:r["@id"]||"",data:r})).map(r=>({type:r.type,id:r.id,subItems:{type:"subitems",items:[{data:JSON.stringify(r.data)}]}}));return{score:null,details:fe.makeTableDetails([{key:"type",valueType:"text",label:"Type",subItemsHeading:{key:"data",valueType:"code"}}],i),notApplicable:i.length===0}}};import{Audit as x}from"lighthouse";var Z=class extends x{static get meta(){return{id:"fs-named-meta",title:"Meta Elements",description:"Lists `<meta>` HTML elements containing metadata that cannot be represented by other HTML meta-related elements, like `<base>`,`<link>`, `<script>`, `<style>`, or `<title>`.",scoreDisplayMode:x.SCORING_MODES.INFORMATIVE,requiredArtifacts:["MetaElements"]}}static audit(t){let{MetaElements:a}=t,i=a.filter(({name:r,content:s})=>r&&s).sort((r,s)=>r.name.localeCompare(s.name)).map(({name:r,content:s})=>({name:r,content:s}));return{score:null,details:x.makeTableDetails([{key:"name",valueType:"text",label:"Name"},{key:"content",valueType:"text",label:"Content"}],i),notApplicable:i.length===0}}},ee=class extends x{static get meta(){return{id:"fs-og-meta",title:"Open Graph Elements",description:"[Open Graph](https://ogp.me/) and similar meta tag protocols can be used to control how social media sites, like Twitter, LinkedIn, and Facebook, display links to your content. Open Graph meta tags have two attributes each: the `property` attribute instead of the `name` attribute, and the `content` or `value` for that property. The property attribute is not defined in official specifications but is widely supported by applications that support the Open Graph protocol.",scoreDisplayMode:x.SCORING_MODES.INFORMATIVE,requiredArtifacts:["MetaElements"]}}static audit(t){let{MetaElements:a}=t,i=a.filter(({property:r,content:s})=>r&&r.startsWith("og:")&&s).sort((r,s)=>r.name.localeCompare(s.name)).map(({property:r,content:s})=>({property:r,content:s}));return{score:null,details:x.makeTableDetails([{key:"property",valueType:"text",label:"Property"},{key:"content",valueType:"text",label:"Content"}],i),notApplicable:i.length===0}}};import{Audit as ye}from"lighthouse";var te=class e extends ye{static artifacts=["Microdata"];static get meta(){return{id:"fs-microdata",title:"Microdata Items",description:"Microdata is part of the [WHATWG](https://developer.mozilla.org/en-US/docs/Glossary/WHATWG) HTML Standard and is used to nest metadata within existing content on web pages. At a high level, microdata consists of a group of name-value pairs. The groups are called items, and each name-value pair is a property. Items and properties are represented by regular elements. Google and other major search engines support the [Schema.org](https://schema.org) vocabulary for structured data.",scoreDisplayMode:ye.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts]}}static audit(t){let{Microdata:a}=t,i=a.map(({id:r,properties:s,type:n})=>({id:r,properties:s.join(", "),type:n}));return{score:null,details:ye.makeTableDetails([{key:"type",valueType:"text",label:"Type"},{key:"id",valueType:"text",label:"ID"},{key:"properties",valueType:"text",label:"Properties"}],i),notApplicable:i.length===0}}};import{Audit as Dc}from"lighthouse";import{EntityClassification as Rc}from"lighthouse/core/computed/entity-classification.js";import{Audit as be}from"lighthouse";var re=class e extends be{static artifacts=["WindowVars"];static get meta(){return{id:"fs-window-vars",description:"List window variables that are likely contributed by first and third parties. These variables are different than the ones provided by the browser and may be potential integration options. Review the [FullStory Help Center](https://help.fullstory.com/hc/en-us/articles/360020624234-Roll-Your-Own-Integration) to create your own integration.",scoreDisplayMode:be.SCORING_MODES.INFORMATIVE,requiredArtifacts:[...e.artifacts],title:"Window Variables"}}static audit(t){let{WindowVars:a}=t,r=a.sort((s,n)=>s.variable.localeCompare(n.variable)).filter(({type:s})=>s==="object"||s==="function").filter(({variable:s})=>{let n=["_dlo_.*","_fs_.*","__zone_symbol__.*",".*Angular.*","ng","ngDevMode","FS","Zone"];for(let l of n)if(s.match(l))return!1;return!0}).map(({variable:s,type:n})=>({variable:s,type:n}));return{score:null,details:be.makeTableDetails([{key:"variable",label:"Variable",valueType:"text"},{key:"type",label:"Object Type",valueType:"text"}],r)}}};var ze=(s=>(s.Attributes="attributes",s.DataLayer="datalayer",s.Elements="elements",s.Integrations="integrations",s.Metadata="metadata",s))(ze||{}),S={attributes:[B,j,W],datalayer:[q,$,K,J],elements:[_,X,z],integrations:[Y,re],metadata:[Z,Q,te,ee]},Bt={attributes:{title:"Element Attributes",auditRefs:I("attributes",S)},datalayer:{title:"Data Layers",auditRefs:I("datalayer",S)},elements:{title:"Elements",auditRefs:I("elements",S)},integrations:{title:"Integrations & APIs",auditRefs:I("integrations",S)},metadata:{title:"Metadata",auditRefs:I("metadata",S)}},Zc={extends:"lighthouse:default",settings:{...Ut.settings,onlyCategories:Object.values(ze)},artifacts:Le(S),audits:Pe(S),categories:Bt};export{Zc as default};
